{"version":3,"sources":["components/NavBar.js","utilities/request.js","store/actions/container.action.js","store/schema/index.js","store/schema/stats.schema.js","store/schema/groups.schema.js","store/schema/container.schema.js","store/schema/image.schema.js","store/schema/cleanup.schema.js","store/reducers/index.js","store/reducers/stats.reducer.js","store/reducers/groups.reducer.js","store/reducers/container.reducer.js","store/reducers/image.reducer.js","store/reducers/cleanUp.reducer.js","store/index.js","store/actions/groups.action.js","components/groups/NewGroupForm.js","components/SecondaryNavBar.js","components/container/switch.js","components/container/selector.js","components/container/restartButton.js","components/container/stat.js","components/createdAt.js","components/container/card.js","components/container/lists.js","components/groups/GroupSwitch.js","components/groups/GroupDeleteButton.js","components/groups/GroupCard.js","components/groups/GroupsList.js","store/actions/stats.action.js","components/LogSideSheet.js","store/actions/image.action.js","components/container/deleteModal.js","pages/container.page.js","components/image/imageCard.js","components/Loader.js","components/image/imageLists.js","pages/image.page.js","store/actions/cleanUp.action.js","components/cleanup/cleanupSubNav.js","components/cleanup/cleanUpInfo.js","pages/cleanup.page.js","routes.js","index.js"],"names":["NavBar","React","PureComponent","constructor","arguments","state","active","componentDidMount","path","this","props","location","pathname","setState","replace","navButton","name","icon","createElement","Text","display","alignItems","Icon","size","color","marginRight","render","Pane","justifyContent","padding","background","Button","height","width","fontSize","borderTopRightRadius","appearance","borderBottomRightRadius","is","Link","to","onClick","borderTopLeftRadius","borderBottomLeftRadius","withRouter","request","method","data","length","undefined","options","url","timeout","axios","genericContainer","payload","type","updateContainer","updateContainerLog","getContainers","status","dispatch","loading","pageError","segment","activeIndex","containerListLoading","concat","then","response","containers","catch","error","toggleContainer","container","hideToaster","containerId","shortId","stateToggling","res","State","_objectSpread","Running","toaster","success","Name","duration","ex","warning","restartContainer","deleteContainer","command","getState","showModal","selectedContainer","getLog","isShowingSideSheet","logData","resetLogSideSheet","toggleDeleteModal","stats","containerStats","isLive","groups","selectedItems","showGroupsPage","showNewGroupForm","newGroupName","createFormLoading","groupListLoading","groupsRunning","groupsSwitchDisabled","image","images","selectedImage","cleanup","segmentOptions","label","value","message","selectedSegment","responseData","apiCallStarted","appReducer","combineReducers","action","map","c","filter","ID","imageId","find","segmentValue","middlewares","thunk","store","createStore","schema","applyMiddleware","genericGroups","groupItemSelector","itemID","includes","modifiedListOfItems","items","groupStatusUpdater","groupSchemaProperty","groupIndex","add","newItems","createGroup","setTimeout","getGroups","deleteGroup","groupId","id","NewGroupForm","toggleLink","handleSubmit","TextInput","placeholder","flexGrow","onChange","e","target","marginTop","style","marginLeft","intent","disabled","isLoading","preventDefault","connect","bindActionCreators","SecondaryNavBar","containerFilters","SegmentedControl","Spinner","newGroupButton","iconBefore","paddingLeft","paddingRight","groupForm","groupsToggler","isBack","renderBody","backgroundColor","ContainerSwitch","Switch","checked","ContainerSelector","Checkbox","marginBottom","ContainerRestartButton","ContainerStat","getMemoryUsage","memory","split","memoryFormated","trim","Number","toFixed","renderBadges","containerID","n","Fragment","Badge","fontWeight","borderRadius","cpu_percentage","memory_usage","network_io","TimeAgo","locale","en","timeAgo","CreatedAt","twitterStyleTime","format","Date","time","ContainerCard","actionButtons","ContainerRestart","renderStats","renderInfo","showStatsInNewLine","index","noHoverStyle","cardName","showColumn","flexDirection","border","className","onMouseEnter","Heading","Created","ContainersList","console","log","key","GroupSwitch","isRunning","runningContainers","toggleAllContainers","runningStatus","GroupDeleteButton","deleteModal","renderDeleteModal","groupName","ReactDOM","createPortal","Dialog","isShown","title","hasHeader","onConfirm","onCloseComplete","confirmLabel","document","body","GroupCard","filterContainers","group","groupContainers","JSON","parse","containers_id","GroupsList","renderGroupsList","genericStats","getContainersStat","LogSideSheet","SideSheet","containerProps","flex","zIndex","flexShrink","elevation","Paragraph","overflowY","Pre","genericImage","runImage","removeImage","getImages","runImageToContainer","deleteImage","danger","toggleImageDeleteModal","modalRoot","getElementById","Modal","Component","super","el","handleDelete","bind","appendChild","componentWillUnmount","removeChild","toggleModal","ContainerPage","setInterval","ContainerLists","ImageCard","Repository","Tag","Size","CreatedSince","Loader","spinner","marginX","marginY","ImageList","ImagePage","ImageLists","executePrune","setSelectedCleanUpSegment","pruneCommand","CleanUpNavBar","CleanUpInfo","CleanUpPage","Routes","BrowserRouter","Navbar","Route","exact","component","CleanupPage","Provider"],"mappings":"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","file":"static/js/main.59fac74c.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Pane, Icon, Text, Button } from 'evergreen-ui'\n\n\nclass NavBar extends React.PureComponent {\n\n  state = {\n    active: 'container'\n  }\n\n  componentDidMount () {\n    let path = this.props.location.pathname\n    if( path === '/' ) path = 'containers'\n    this.setState({\n      active: path.replace('/', '')\n    })\n  }\n\n  navButton (name, icon) {\n    return <Text display='flex' alignItems='center'>\n      <Icon size={14} color=\"muted\" icon={ icon } marginRight={5}/> \n        { name }\n    </Text>\n  }\n\n  render () {\n    const { active } = this.state\n    return <Pane display=\"flex\" justifyContent=\"center\" padding={26} background=\"#f9f9fc\">\n      <Button \n        height={48} \n        width={250} \n        justifyContent='center' \n        alignItems='center'\n        fontSize={14} \n        borderTopRightRadius={0} \n        appearance={active === 'containers' ? 'primary' : 'default'}\n        borderBottomRightRadius={0}\n        is={Link}\n        to='/'\n        onClick={() => this.setState({active: 'containers'})}>\n          <Icon icon=\"layers\" marginRight={5} size={14} /> Container\n        </Button>\n      <Button \n        height={48} \n        width={250} \n        justifyContent='center' \n        alignItems='center'\n        fontSize={14} \n        borderTopLeftRadius={0} \n        borderBottomLeftRadius={0} \n        borderTopRightRadius={0} \n        appearance={active === 'images' ? 'primary' : 'default'}\n        borderBottomRightRadius={0} \n        is={Link}\n        to='/images'\n        onClick={() => this.setState({active: 'images'})}>\n          <Icon icon=\"projects\" marginRight={5} size={14} /> Image\n        </Button>\n      <Button \n        height={48} \n        width={250} \n        justifyContent='center' \n        alignItems='center'\n        fontSize={14} \n        borderTopLeftRadius={0} \n        appearance=\"default\"\n        borderBottomLeftRadius={0} \n        appearance={active === 'cleanup' ? 'primary' : 'default'}\n        is={Link}\n        to='/cleanup'\n        onClick={() => this.setState({active: 'cleanup'})}>\n          <Icon icon=\"shield\" marginRight={5} size={14} /> Clean-up\n        </Button>\n    </Pane>\n  }\n}\n\nexport default withRouter(NavBar)","import axios from 'axios'\nexport const restPath = '/api/'\n\nexport const request = ( method, path, data = {} ) => {\n  const options = {\n    method,\n    data,\n    url: restPath + path,\n    timeout: 50000,\n  }\n  return axios(options)\n}\n","import { request } from '../../utilities/request'\nimport { toaster } from 'evergreen-ui'\n\nexport const genericContainer = payload => ({\n  type: 'GENERIC_CONTAINER',\n  payload\n})\n\nexport const updateContainer = payload => ({\n  type: 'UPDATE_CONTAINER',\n  payload\n})\n\nexport const removeContainer = payload => ({\n  type: 'DELETE_CONTAINER',\n  payload\n})\n\nexport const updateContainerLog = payload => ({\n  type: 'UPDATE_LOG',\n  payload\n})\n\nexport const toggleModal = payload => ({\n  type: 'TOGGLE_MODAL',\n  payload\n})\n\nexport const getContainers = (status = 'active') => {\n  return dispatch => {\n    dispatch(genericContainer({\n      loading: status,\n      pageError: false,\n      segment: status,\n      activeIndex: 0,\n      containerListLoading: true,\n    }))\n    request('get', `container/fetch?status=${status}`, {})\n      .then(response => {\n        dispatch(genericContainer({\n          loading: false,\n          containers: response.data,\n          pageError: false,\n          containerListLoading: false,\n        }))\n      }).catch(error => {\n        dispatch(genericContainer({\n          loading: false,\n          pageError: true,\n          containerListLoading: false,\n        }))\n      })\n  }\n}\n\nexport const toggleContainer = (container, status, hideToaster) => {\n  return dispatch => {\n    dispatch(updateContainer({\n      containerId: container.shortId,\n      data: { stateToggling: true },\n    }))\n    request('get', `container/command?container=${container.shortId}&command=${status}`)\n      .then(res => {\n        const State = {\n          ...container.State,\n          ...{\n            Running: status === 'start'\n              ? true\n              : false\n          }\n        }\n        dispatch(updateContainer({\n          containerId: container.shortId,\n          data: { \n            State,\n            stateToggling: false,\n          },\n        }))\n        if(! !!hideToaster) {\n          toaster.success(\n            `Container ${container.Name} has been ${status === 'start'? 'started' : 'stopped'}.`,\n            { duration: 5 }\n          )\n        }\n      })\n      .catch( ex => {\n        dispatch(updateContainer({\n          containerId: container.shortId,\n          data: { stateToggling: false },\n        }))\n        toaster.warning(`There is problem ${status === 'start'? 'starting' : 'stopping'} container ${container.Name}`,{duration: 5})\n      })\n  }\n}\n\nexport const restartContainer = (container, status) => {\n  return dispatch => {\n    dispatch(updateContainer({\n      containerId: container.shortId,\n      data: { \n        stateToggling: true,\n        State: {\n          ...container.State,\n          ...{\n            Running: false\n          }\n        }\n      },\n    }))\n    request('get', `container/command?container=${container.shortId}&command=${status}`)\n      .then(res => {\n        dispatch(updateContainer({\n          containerId: container.shortId,\n          data: { \n            State: {\n              ...container.State,\n              ...{\n                Running: true\n              }\n            },\n            stateToggling: false,\n          },\n        }))\n        toaster.success(`Container ${container.Name} has been restarted.`,{ duration: 5 })\n      })\n      .catch( ex => {\n        dispatch(updateContainer({\n          containerId: container.shortId,\n          data: { \n            State: {\n              ...container.State,\n              ...{\n                Running: false\n              }\n            },\n            stateToggling: false,\n          },\n        }))\n        toaster.warning(`There is problem restarting container ${container.Name}`,{duration: 5})\n      })\n  }\n}\n\nexport const deleteContainer = (container, command) => (dispatch, getState)=>{\n    request('get', `container/command?container=${container.shortId}&command=${command}`)\n      .then(res => {\n        dispatch(removeContainer({\n          containerId: container.shortId,\n          showModal: !getState().container.showModal,\n          selectedContainer: {}\n        }))\n        toaster.success(\n          `Container ${container.Name} is no more!!!.`,\n          {\n            duration: 5\n          }\n        )\n      })  \n}\n\nexport const getLog = (container) => {\n  return dispatch => {\n    dispatch(updateContainerLog({\n      container: container,\n      isShowingSideSheet: false,\n    }))\n    request('get', `container/logs?container=${container.shortId}`)\n      .then(response => {\n        dispatch(updateContainerLog({\n          container: container,\n          isShowingSideSheet: true,\n          logData: response.data\n        }))\n      })\n  }\n}\n\nexport const resetLogSideSheet = () => (dispatch, getState)=>{\n  dispatch(updateContainerLog({\n    isShowingSideSheet: !getState().container.isShowingSideSheet,\n  }))\n}\n\nexport const toggleDeleteModal = (container) => (dispatch, getState)=>{\n  dispatch(toggleModal({\n    showModal: !getState().container.showModal,\n    selectedContainer: container ? container : {}\n  }))\n}","import stats from './stats.schema'\nimport groups from './groups.schema'\nimport container from './container.schema'\nimport image from './image.schema'\nimport cleanup from './cleanup.schema'\n\nexport default {\n  stats,\n  groups,\n  container,\n  image,\n  cleanup\n}","export default {\n  containerStats: [],\n  isLive: false,\n}","export default {\n  groups: [],\n  selectedItems: [],\n  showGroupsPage: false,\n  showNewGroupForm: false,\n  activeIndex: 0,\n  newGroupName: '',\n  createFormLoading: false,\n  groupListLoading: true,\n  groupsRunning: [],\n  groupsSwitchDisabled: [],\n}","export default {\n  containers: [],\n  loading: false,\n  containerListLoading: true,\n  pageError: false,\n  segment: 'active',\n  activeIndex: 0,\n  isShowingSideSheet: false,\n  logData: {},\n  showModal: false,\n  selectedContainer: {}\n}","export default {\n   images: [],\n   loading: false,\n   pageError: false,\n   activeIndex: 0,\n   isShowingSideSheet: false,\n   logData: {},\n   showModal: false,\n   selectedImage: {}\n }","export default {\n   segmentOptions: [\n      { label: 'Prune Images', value: 'image', message: 'This action will allow you to clean up unused images. It cleans up dangling images. A dangling image is one that is not tagged and is not referenced by any container.' },\n      { label: 'Prune Containers', value: 'container', message: 'When you stop a container, it is not automatically removed unless you started it with the --rm flag. A stopped container’s writable layers still take up disk space.' },\n      { label: 'Prune Volumes', value: 'volume', message: 'Volumes can be used by one or more containers, and take up space on the Docker host. Volumes are never removed automatically, because to do so could destroy data.' },\n      { label: 'Prune System', value: 'system', message: 'Remove all unused containers, networks, images (both dangling and unreferenced), and optionally, volumes.' }\n    ],\n   selectedSegment: { label: 'Prune Images', value: 'image', message: 'This action will allow you to clean up unused images. It cleans up dangling images. A dangling image is one that is not tagged and is not referenced by any container.' },\n   responseData: {},\n   isShowingSideSheet: false,\n   apiCallStarted: false\n }","import { combineReducers } from 'redux'\n\nimport stats from './stats.reducer'\nimport groups from './groups.reducer'\nimport container from './container.reducer'\nimport image from './image.reducer'\nimport cleanup from './cleanUp.reducer'\n\nconst appReducer = combineReducers({\n  stats,\n  groups,\n  container,\n  image,\n  cleanup\n})\n\nexport default (state, action) => {\n  return appReducer(state, action)\n}","export default (state = null, action) => {\n\n  switch (action.type) {\n\n    case 'GENERIC_STATS':\n      return {\n        ...state,\n        ...action.payload\n      }\n      \n    default:\n      return state\n\n  }\n}","export default (state = null, action) => {\n\n  switch (action.type) {\n\n    case 'GENERIC_GROUPS':\n      return {\n        ...state,\n        ...action.payload\n      }\n      \n    default:\n      return state\n\n  }\n}","export default (state = null, action) => {\n\n  switch (action.type) {\n\n    case 'GENERIC_CONTAINER':\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    case 'UPDATE_CONTAINER':\n      return {\n        ...state,\n        ...{\n          containers: state.containers.map(c => {\n            if(c.shortId == action.payload.containerId) {\n              return {\n                ...c,\n                ...action.payload.data\n              }\n            } else {\n              return c\n            }\n          })\n        }\n      }\n    \n    case 'DELETE_CONTAINER':\n      return {\n        ...state,\n        ...{\n          containers: state.containers.filter(c => {\n            return c.shortId !== action.payload.containerId\n          },\n          ),\n          showModal: action.payload.showModal,\n          selectedContainer: action.payload.selectedContainer\n        }\n      }\n\n    case 'UPDATE_LOG':\n      return {\n        ...state,\n        ...{\n          logData: action.payload.logData && action.payload.container ? {\n            container: action.payload.container ,\n            data:  action.payload.logData\n          } : {},\n          isShowingSideSheet: action.payload.isShowingSideSheet\n        }\n      }\n    \n    case 'TOGGLE_MODAL':\n      return {\n        ...state,\n        ...{\n          showModal: action.payload.showModal,\n          selectedContainer: action.payload.selectedContainer\n        }\n      }\n      \n    default:\n      return state\n\n  }\n}","export default (state = null, action) => {\n\n   switch (action.type) {\n \n     case 'GENERIC_IMAGE':\n       return {\n         ...state,\n         ...action.payload\n       }\n\n     case 'RUN_IMAGE':\n       return {\n         ...state,\n         ...{\n          images: state.images.map(c => {\n            if(c.ID == action.payload.imageId) {\n              return {\n                ...c,\n                ...action.payload.data\n              }\n            } else {\n              return c\n            }\n          })\n        }\n       }\n\n     case 'DELETE_IMAGE':\n       return {\n         ...state,\n         ...{\n           images: state.images.filter(c => {\n            if(action.payload.imageId) {\n              return c.ID !== action.payload.imageId\n            } else {\n              return c\n            }\n           }),\n           showModal: action.payload.showModal,\n           selectedImage: action.payload.selectedImage\n         }\n       }\n \n     case 'TOGGLE_IMAGE_MODAL':\n       return {\n         ...state,\n         ...{\n           showModal: action.payload.showModal,\n           selectedImage: action.payload.selectedImage\n         }\n       }\n       \n     default:\n       return state\n \n   }\n }","export default (state = null, action) => {\n\n   switch (action.type) {\n \n     case 'SELECTED_SEGMENT':\n       return {\n         ...state,\n         ...{\n            selectedSegment: state.segmentOptions.find(c => {\n              return c.value === action.payload.segmentValue\n            })\n          }\n       }\n      \n      case 'EXECUTE_PRUNE':\n       return {\n         ...state,\n         ...{\n            isShowingSideSheet: action.payload.isShowingSideSheet,\n            responseData: action.payload.responseData ? {\n              data: action.payload.responseData\n            } : {},\n            apiCallStarted: action.payload.apiCallStarted\n          }\n       }\n       \n     default:\n       return state\n \n   }\n }","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport schema from './schema'\nimport rootReducer from './reducers'\nconst middlewares = [thunk]\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  const { createLogger } = require('redux-logger')\n  const logger = createLogger({\n    collapsed: true,\n  })\n  middlewares.push(logger)\n}\n\nexport const store = createStore(\n  rootReducer,\n  schema, // Initial data.\n  applyMiddleware(...middlewares)\n)","import { store } from '../'\nimport { request } from '../../utilities/request'\n\nexport const genericGroups = payload => ({\n  type: 'GENERIC_GROUPS',\n  payload\n})\n\nexport const groupItemSelector = itemID => {\n  return dispatch => {\n    const selectedItems = store.getState().groups.selectedItems\n    if(selectedItems.includes(itemID)) {\n      // Remove item.\n      const modifiedListOfItems = selectedItems.filter(value => value != itemID)\n      dispatch(genericGroups({\n        selectedItems: modifiedListOfItems,\n      }))\n    } else {\n      // Add item.\n      const items = [\n        ...selectedItems,\n        itemID\n      ]\n      dispatch(genericGroups({\n        selectedItems: items\n      }))\n    }\n  }\n}\n\nexport const groupStatusUpdater = (groupSchemaProperty, groupIndex, add) => {\n  return dispatch => {\n    const items = store.getState().groups[groupSchemaProperty]\n    if(add) {\n      // Remove the group index.\n      const newItems = items.filter(value => value != groupIndex)\n      dispatch(genericGroups({\n        [groupSchemaProperty]: newItems\n      }))\n    } else {\n      // Add the group index.\n      const newItems = [\n        ...items,\n        groupIndex\n      ]\n      dispatch(genericGroups({\n        [groupSchemaProperty]: newItems\n      }))\n    }\n  }\n}\n\nexport const createGroup = data => {\n  return dispatch => {\n    dispatch(genericGroups({ createFormLoading: true }))\n    request('post', 'groups', {name: data.newGroupName, containers: data.selectedItems})\n      .then(res => {\n        setTimeout(() => {\n          dispatch(genericGroups({ \n            newGroupName: '',\n            selectedItems: [],\n            showGroupsPage: true,\n            showNewGroupForm: false,\n            createFormLoading: false,\n          }))\n        }, 1200)\n      })\n  }\n}\n\nexport const getGroups = () => {\n  return dispatch => {\n    dispatch(genericGroups({\n      groupListLoading: true,\n    }))\n    request('get', 'groups', {})\n      .then(res => {\n        dispatch(genericGroups({\n          groups: res.data,\n          groupListLoading: false,\n        }))\n      })\n  }\n}\n\nexport const deleteGroup = groupId => {\n  return dispatch => {\n    request('delete', 'groups', {id: groupId})\n      .then(res => {\n        dispatch(getGroups())\n      })\n  }\n}","import React from 'react'\nimport { Pane, Button, TextInput, IconButton } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { genericGroups, createGroup } from '../../store/actions/groups.action'\n\nclass NewGroupForm extends React.PureComponent {\n\n  state = {\n    toggleLink: false,\n  }\n\n  handleSubmit () {\n    const { createGroup, newGroupName, selectedItems } = this.props\n    createGroup({newGroupName, selectedItems})\n  }\n\n  render () {\n    const { selectedItems, newGroupName, genericGroups, createFormLoading } = this.props\n    return <Pane \n      display='flex'\n      justifyContent='center'\n      alignItems='center'>\n        <Pane>\n          <TextInput\n            name=\"text-input-name\"\n            placeholder=\"New Group Name\"\n            height={26}\n            display='flex'\n            flexGrow={1}\n            onChange={e => {\n              genericGroups({\n                newGroupName: e.target.value\n              })\n            }}\n            value={newGroupName}\n          />\n          {\n            this.state.toggleLink && <TextInput\n              name=\"text-input-name\"\n              placeholder=\"URL of the application\"\n              height={26}\n              marginTop={6}\n              display='flex'\n              flexGrow={1}\n              onChange={e => {\n                genericGroups({\n                  newGroupName: e.target.value\n                })\n              }}\n              value={newGroupName}\n            />\n          }\n        </Pane>\n        <Pane display=\"flex\" style={{height: '100%'}}>\n          {/*<IconButton \n            icon=\"link\" \n            height={26} \n            marginLeft={6} \n            onClick={e => {\n              e.preventDefault()\n              this.setState({\n                toggleLink: !this.state.toggleLink\n              })\n            }}\n          />\n          */}\n          <Button\n            height={26}\n            appearance=\"primary\"\n            marginLeft={6}\n            intent=\"success\"\n            disabled={(selectedItems.length <= 0) || (newGroupName === '')}\n            isLoading={createFormLoading}\n            onClick={(e) => {\n              e.preventDefault()\n              this.handleSubmit()\n            }}\n          >\n            Create Group\n          </Button>\n        </Pane>\n    </Pane>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    newGroupName: state.groups.newGroupName,\n    selectedItems: state.groups.selectedItems,\n    createFormLoading: state.groups.createFormLoading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    createGroup,\n    genericGroups,\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( NewGroupForm )","import React from 'react'\nimport { Pane, Spinner, SegmentedControl, Button } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { getContainers } from '../store/actions/container.action'\nimport { genericGroups } from '../store/actions/groups.action'\n\nimport NewGroupForm from './groups/NewGroupForm'\n\nclass SecondaryNavBar extends React.PureComponent {\n\n  containerFilters () {\n    const { loading, segment, getContainers } = this.props\n    return <SegmentedControl\n      width={400}\n      height={26}\n      options={[\n        { label: loading === 'all' ? <Spinner size={16} /> : 'All', value: 'all' },\n        { label: loading === 'active' ? <Spinner size={16} /> : 'Active', value: 'active' },\n        { label: loading === 'stopped' ? <Spinner size={16} /> : 'Stopped', value: 'stopped' }\n      ]}\n      value={segment}\n      onChange={value => {\n        getContainers(value)\n      }}\n    />\n  }\n\n  newGroupButton () {\n    const { showNewGroupForm, genericGroups, getContainers } = this.props\n    return <Button \n      marginRight={12} \n      iconBefore='add'\n      paddingLeft={35}\n      paddingRight={30}\n      height={26}\n      onClick={() => {\n        const groupForm = !showNewGroupForm\n        genericGroups({\n          showGroupsPage: false,\n          showNewGroupForm: groupForm,\n        })\n        if(groupForm) {\n          getContainers('all')\n        }\n      }}>Create New GROUP</Button>\n  }\n\n  groupsToggler () {\n    const { genericGroups, showGroupsPage, showNewGroupForm } = this.props\n    const isBack = showGroupsPage || showNewGroupForm\n    return <Button \n      marginRight={12} \n      iconBefore={isBack ? 'chevron-left' : 'tag'}\n      paddingLeft={35}\n      paddingRight={30}\n      height={26}\n      onClick={() => {\n        genericGroups({ \n          showGroupsPage: !showGroupsPage,\n          showNewGroupForm: false,\n        })\n      }}>\n        {isBack ? 'Back' : 'Groups'}\n    </Button>\n  }\n\n  renderBody () {\n    const { showNewGroupForm, showGroupsPage } = this.props\n    if(showNewGroupForm) {\n      return <NewGroupForm />\n    } else if (showGroupsPage) {\n      return this.newGroupButton()\n    } else {\n      return this.containerFilters()\n    }\n  }\n\n  render() {\n    return <Pane \n      backgroundColor=\"#f1f1f1\" \n      display=\"flex\" \n      justifyContent=\"center\"\n      padding={10}>\n        {this.groupsToggler()}\n        {this.renderBody()}\n      </Pane>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    segment: state.container.segment,\n    loading: state.container.loading,\n    showGroupsPage: state.groups.showGroupsPage,\n    showNewGroupForm: state.groups.showNewGroupForm,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    getContainers,\n    genericGroups,\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( SecondaryNavBar )","import React from 'react'\nimport { Switch } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { toggleContainer } from '../../store/actions/container.action'\n\nclass ContainerSwitch extends React.PureComponent {\n  render () {\n    const { container, toggleContainer } = this.props\n    const command = container.State.Running\n      ? 'stop'\n      : 'start'\n    const disabled = !!container.stateToggling\n    return <Switch \n      marginRight={10} \n      height={18} \n      marginTop={2}\n      checked={container.State.Running} \n      disabled={disabled}\n      onChange={() => {\n        toggleContainer(container, command)\n      }}\n    />\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    toggleContainer\n  },\n  dispatch\n)\n\nexport default connect(null, mapDispatchToProps)( ContainerSwitch )","import React from 'react'\nimport { Checkbox } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { groupItemSelector } from '../../store/actions/groups.action'\n\nclass ContainerSelector extends React.PureComponent {\n\n  render () {\n    const { groupItemSelector, selectedItems } = this.props\n    const shortId = this.props.container.shortId\n    const checked = selectedItems.includes(shortId)\n    return <Checkbox \n      marginRight={15}\n      marginTop={0}\n      marginBottom={0}\n      checked={checked}\n      onChange={() => {\n        groupItemSelector(shortId)\n      }}\n    />\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedItems: state.groups.selectedItems,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    groupItemSelector\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( ContainerSelector )","import React from 'react'\nimport { Button } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { restartContainer } from '../../store/actions/container.action'\n\nclass ContainerRestartButton extends React.PureComponent {\n  render () {\n    const { container, restartContainer } = this.props\n    const disabled = !!container.stateToggling\n    return <Button \n      marginRight={5} \n      height={22} \n      iconBefore=\"refresh\"\n      disabled={disabled}\n      onClick={() => {\n        restartContainer(container, 'restart')\n      }}\n      >\n        Restart\n    </Button>\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    restartContainer\n  },\n  dispatch\n)\n\nexport default connect(null, mapDispatchToProps)( ContainerRestartButton )","import React from 'react'\nimport { Badge } from 'evergreen-ui'\nimport { connect } from 'react-redux'\n\n\nclass ContainerStat extends React.PureComponent {\n  \n  getMemoryUsage(memory) {\n    [memory] = memory.split('/')\n    let memoryFormated = memory.replace(/[a-zA-Z]/g, '').trim()\n    return Number(memoryFormated).toFixed(1) + 'mb'\n  }\n\n  renderBadges () {\n    const { stats, containerID } = this.props\n    const data = stats\n      .find(n => n.id === containerID)\n    return data \n      ? <>\n        <Badge backgroundColor=\"#deebf7\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>\n          cpu {data.cpu_percentage}\n        </Badge>\n        <Badge backgroundColor=\"#ebe7f8\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>\n          ram {this.getMemoryUsage(data.memory_usage)}\n        </Badge>\n        <Badge backgroundColor=\"#ebe7f8\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>\n          net {this.getMemoryUsage(data.network_io)}\n        </Badge>\n      </>\n      : null\n  }\n\n  render () {\n    return this.renderBadges()\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stats: state.stats.containerStats\n  }\n}\n\nexport default connect(mapStateToProps, null)( ContainerStat )","import React from 'react'\nimport { Badge } from 'evergreen-ui'\n\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\nTimeAgo.locale(en)\nconst timeAgo = new TimeAgo('en-US')\n\nconst CreatedAt = props => {\n  const twitterStyleTime = timeAgo.format(new Date(props.time), 'twitter')\n  return <Badge backgroundColor=\"#d4eee3\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>\n    {twitterStyleTime.trim() === '' ? 'now' : twitterStyleTime}\n  </Badge>\n}\n\nexport default CreatedAt","import React from 'react'\nimport { Pane, Button, Heading, Badge } from 'evergreen-ui'\nimport './style/card.css'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { genericContainer, getLog, toggleDeleteModal } from '../../store/actions/container.action'\n\nimport ContainerSwitch from './switch'\nimport ContainerSelector from './selector'\nimport ContainerRestart from './restartButton'\nimport ContainerStat from './stat'\nimport CreatedAt from '../createdAt'\n\nclass ContainerCard extends React.PureComponent {\n\n  actionButtons (active) {\n    const { container, showNewGroupForm, toggleDeleteModal, getLog } = this.props\n    if(!showNewGroupForm) {\n      if(active) {\n        return <Pane display=\"flex\" marginTop={12} marginLeft={46}>\n          <ContainerRestart container={container} />\n          <Button marginRight={5} \n            height={22} \n            iconBefore=\"application\"\n            onClick={()=>{\n              getLog(container)\n            }}>Log</Button>\n          <Button marginRight={5} \n            height={22} \n            iconBefore=\"trash\" \n            disabled={container.State.Running}\n            onClick={() => {\n              toggleDeleteModal(container)\n            }}>\n            Delete\n          </Button>\n        </Pane>\n      } else {\n        return null\n      }\n    }\n  }\n\n  renderStats (container) {\n    const { showNewGroupForm } = this.props\n    if(!showNewGroupForm) {\n      if(container.State.Running) {\n        return <ContainerStat containerID={container.shortId} />\n      }\n    }\n  }\n\n  renderInfo (container) {\n    const { showStatsInNewLine } = this.props\n    const marginLeft = !!showStatsInNewLine ? 35:0\n    const marginTop = !!showStatsInNewLine ? 5:0\n    return <Pane display=\"flex\" marginLeft={marginLeft} marginTop={marginTop}>\n      { this.renderStats(container) }\n    </Pane>\n  }\n\n  render () {\n    const { container, activeIndex, genericContainer, index, showNewGroupForm, noHoverStyle, showStatsInNewLine } = this.props\n    const active = activeIndex == index\n    let cardName = 'element-card'\n    if(!noHoverStyle) {\n      if(active) {\n        cardName += ' card-active'\n      }\n    }\n    const showColumn = !!showStatsInNewLine ? 'column':'row'\n      return <Pane \n            display=\"flex\" \n            flexDirection=\"column\" \n            flexGrow={1}\n            padding={12}\n            borderRadius={6}\n            border=\"default\"\n            className={cardName}\n            onMouseEnter={() => genericContainer({\n              activeIndex: index\n            })}>\n        <Pane display=\"flex\" flexDirection={showColumn}>\n          <Pane display=\"flex\" alignItems=\"flex-start\">\n            {\n              showNewGroupForm\n                ? <ContainerSelector container={container} />\n                : <ContainerSwitch container={container} />\n            }\n            <Heading size={400}>{container.Name}</Heading>\n            <Badge \n              backgroundColor=\"#e7e9ef\" \n              fontWeight=\"bold\" \n              borderRadius={16} \n              paddingLeft={10} \n              fontSize={11} \n              paddingRight={10} \n              marginLeft={10} \n              marginTop={3}>{container.shortId}\n            </Badge>\n            <CreatedAt time={container.Created} />\n          </Pane>\n          { this.renderInfo(container) }\n        </Pane>\n        { this.actionButtons(active) }\n    </Pane>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeIndex: state.container.activeIndex,\n    showNewGroupForm: state.groups.showNewGroupForm,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    genericContainer,\n    getLog,\n    toggleDeleteModal\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( ContainerCard )","import React from 'react'\nimport { Pane } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getContainers, toggleDeleteModal, resetLogSideSheet } from '../../store/actions/container.action'\n\nimport ContainerCard from './card'\n\nclass ContainersList extends React.PureComponent {\n\n  componentDidMount () {\n    this.props.getContainers(this.props.segment)\n    console.log('log this.props:', this.props); // Add this line to check the value\n  }\n\n  render () {\n    const { containers } = this.props\n    return <Pane \n      display=\"flex\" \n      flexDirection=\"column\" \n      justifyContent=\"center\" \n      alignItems=\"center\"\n      marginTop={20}>\n      \n        {\n          containers.map((container, index) => \n            <ContainerCard \n              key={index} \n              index={index} \n              container={container} \n            />\n          )\n        }\n    </Pane>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    segment: state.container.segment,\n    containers: state.container.containers,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    getContainers\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( ContainersList )","import React from 'react'\nimport { Switch } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { groupStatusUpdater, genericGroups } from '../../store/actions/groups.action'\nimport { toggleContainer } from '../../store/actions/container.action'\n\nclass GroupSwitch extends React.PureComponent {\n\n  isRunning () {\n    const { containers } = this.props\n    const runningContainers = containers.filter(c => c.State.Running === true)\n    return containers.length === runningContainers.length\n  }\n\n  isLoading () {\n    const { containers } = this.props\n    const loadingContainers = containers.filter(c => !!c.stateToggling)\n    return loadingContainers === 0\n  }\n\n  toggleAllContainers () {\n    const { containers, toggleContainer, genericGroups, groupIndex } = this.props\n    const isRunning = this.isRunning()\n    const command = isRunning\n      ? 'stop'\n      : 'start'\n    genericGroups({\n      activeIndex: groupIndex\n    })\n    containers.map(container => {\n      toggleContainer(container, command, true)\n    })\n  }\n\n  render () {\n    const runningStatus = this.isRunning()\n    return <Switch \n      marginRight={10} \n      height={22} \n      marginTop={2}\n      checked={runningStatus} \n      disabled={this.isLoading()}\n      onChange={() => {\n        this.toggleAllContainers()\n      }}\n    />\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeIndex: state.groups.activeIndex,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    genericGroups,\n    toggleContainer,\n    groupStatusUpdater,\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( GroupSwitch )","import React from 'react'\nimport { Button, Dialog, Heading, Badge } from 'evergreen-ui'\nimport ReactDOM from 'react-dom'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { deleteGroup } from '../../store/actions/groups.action'\n\nclass GroupDeleteButton extends React.PureComponent {\n\n  state = {\n    deleteModal: false,\n  }\n\n  renderDeleteModal () {\n    const { groupName, groupId, deleteGroup } = this.props\n    if(this.state.deleteModal) {\n      return ReactDOM.createPortal(\n        <Dialog\n          isShown={this.state.deleteModal}\n          title=\"Confirmation\"\n          hasHeader={false}\n          intent=\"danger\"\n          onConfirm={() => {\n            deleteGroup(groupId)\n            this.setState({\n              deleteModal: false,\n            })\n          }}\n          onCloseComplete={() => this.setState({ deleteModal: false })}\n          confirmLabel=\"Confirm\"\n        >\n          <Heading size={500} marginTop=\"default\" marginBottom=\"default\">\n            Are you sure you want to delete <Badge color=\"neutral\">{groupName}</Badge> container group?\n          </Heading>\n        </Dialog>,\n        document.body\n      )\n    } else {\n      return null\n    }\n  }\n\n  render () {\n    return <>\n      <Button marginRight={5} \n        height={22} \n        iconBefore=\"trash\"\n        onClick={() => {\n          this.setState({\n            deleteModal: !this.state.deleteModal\n          })\n        }}>\n        Delete Group\n      </Button>\n      {this.renderDeleteModal()}\n    </>\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    deleteGroup,\n  },\n  dispatch\n)\n\nexport default connect(null, mapDispatchToProps)( GroupDeleteButton )","import React from 'react'\nimport { Pane, Button, Heading, Badge } from 'evergreen-ui'\nimport './style/GroupCard.css'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { genericGroups } from '../../store/actions/groups.action'\n\nimport ContainerCard from '../container/card'\nimport GroupSwitch from '../groups/GroupSwitch'\nimport GroupDeleteButton from './GroupDeleteButton'\n\nclass GroupCard extends React.PureComponent {\n\n  filterContainers () {\n    const { group, containers } = this.props\n    const groupContainers = JSON.parse(group.containers_id)\n    const filteredContainers = containers.filter(container => groupContainers.includes(container.shortId))\n    return filteredContainers\n  }\n\n  render () {\n    const { group, genericGroups, index, activeIndex } = this.props\n    const containers = this.filterContainers()\n    if(containers.length <= 0) return null\n    const active = activeIndex == index\n      return <Pane \n        display=\"flex\" \n        flexDirection=\"column\" \n        flexGrow={1}\n        padding={12}\n        borderRadius={6}\n        marginBottom={16}\n        border=\"default\"\n        className=\"element-card card-active\"\n        >\n          <Pane display=\"flex\" flexGrow={1} alignItems=\"center\">\n            <Pane display=\"flex\" flexGrow={1} justifyContent=\"center\" alignItems=\"center\">\n              <GroupSwitch \n                containers={containers} \n                groupIndex={index}/>\n              <Heading \n                display=\"flex\" \n                alignItems=\"center\" \n                className=\"groupOptToggler\"\n                onClick={() => genericGroups({\n                  activeIndex: index\n                })}\n                size={600}>{group.name} \n                <Badge\n                  marginLeft={6}>{containers.length}</Badge>\n              </Heading>\n              <Pane display=\"flex\" flexGrow={1} justifyContent=\"flex-end\">\n                <GroupDeleteButton groupName={group.name} groupId={group.id} />\n              </Pane>\n            </Pane>\n          </Pane>\n          {\n            active && <Pane marginLeft={30} marginTop={10}>\n              <Heading size={400} marginLeft={14} marginTop={10} color=\"#999\">All Containers</Heading>\n              {\n                containers.map((container, index) => {\n                  return <ContainerCard\n                    key={index} \n                    index={index} \n                    container={container}\n                    noHoverStyle \n                    showStatsInNewLine\n                  />\n                })\n              }\n            </Pane>\n          }\n\n    </Pane>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    containers: state.container.containers,\n    activeIndex: state.groups.activeIndex,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    genericGroups,\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( GroupCard )","import React from 'react'\nimport { Pane, Heading } from 'evergreen-ui'\n\nimport GroupCard from './GroupCard'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { getContainers } from '../../store/actions/container.action'\nimport { getGroups } from '../../store/actions/groups.action'\n\nclass GroupsList extends React.PureComponent {\n\n  componentDidMount () {\n    const { getGroups, getContainers } = this.props\n    getGroups()\n    getContainers('all')\n  }\n\n  renderGroupsList () {\n    const { groups, groupListLoading, containerListLoading } = this.props\n    if( groupListLoading && containerListLoading ) {\n      return <Heading size={600}>Please wait</Heading>\n    }\n    if( groups.length <= 0 ) {\n      return <Heading size={600}>No groups found, please create a new one.</Heading>\n    }\n    return groups.map((group, index) => {\n      return <GroupCard \n        key={index}\n        index={index}\n        group={group}\n      />\n    })\n  }\n\n  render () {\n    return <Pane \n    display=\"flex\" \n    flexDirection=\"column\" \n    justifyContent=\"center\" \n    alignItems=\"center\"\n    marginTop={20}>\n      {this.renderGroupsList()}\n    </Pane>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    groups: state.groups.groups,\n    groupListLoading: state.groups.groupListLoading,\n    containerListLoading: state.container.containerListLoading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    getGroups,\n    getContainers,\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( GroupsList )","import { store } from '../'\nimport { request } from '../../utilities/request'\n\nexport const genericStats = payload => ({\n  type: 'GENERIC_STATS',\n  payload\n})\n\nexport const getContainersStat = () => {\n  return dispatch => {\n    request('get', `container/stats`, {})\n      .then(response => {\n        dispatch(genericStats({ containerStats: response.data }))\n      }).catch(error => {\n        console.log(error)\n      })\n  }\n}\n\nexport const containerStatsProcess = () => {\n  if(!store.getState().stats.isLive) {\n    return dispatch => {\n      dispatch(getContainersStat())\n      dispatch(genericStats({ isLive: true }))\n      setInterval(() => {\n        dispatch(getContainersStat())\n      }, 4000)\n    }\n  } else {\n    return dispatch => {\n      dispatch(genericStats({ isLive: true }))\n    }\n  }\n}","import React from 'react'\nimport { Pane, Pre, SideSheet, Heading, Paragraph } from 'evergreen-ui'\n\nclass LogSideSheet extends React.PureComponent {\n\n  render() {\n    const { isShowingSideSheet, logData, resetLogSideSheet } = this.props\n    return <SideSheet\n                width={1000}\n                isShown={isShowingSideSheet}\n                onCloseComplete={resetLogSideSheet}\n                containerProps={{\n                display: 'flex',\n                flex: '1',\n                flexDirection: 'column',\n                }}\n            >\n                <Pane zIndex={1} flexShrink={0} elevation={0} backgroundColor=\"white\">\n                {logData && logData.container && \n                    <Pane padding={16}>\n                        <Heading size={600}>Container logs</Heading>                  \n                        <Paragraph size={400}>\n                            {`Container Name: ${logData.container.Name}`}\n                        </Paragraph>\n                    </Pane>\n                 }\n                 { !logData.container && \n                    <Pane padding={16}>\n                        <Heading size={600}>Prune response</Heading>                  \n                    </Pane>\n                 }\n                </Pane>\n                <Pane flex=\"1\" overflowY=\"scroll\" background=\"tint1\" padding={16}>\n                    <Pane>\n                      {logData && <Pre marginTop={0}>{logData.data}</Pre>}\n                    </Pane>\n                </Pane>\n            </SideSheet>\n  }\n}\n\nexport default  LogSideSheet ","import { request } from '../../utilities/request'\nimport { toaster } from 'evergreen-ui'\n\nexport const genericImage = payload => ({\n  type: 'GENERIC_IMAGE',\n  payload\n})\n\nexport const runImage = payload => ({\n  type: 'RUN_IMAGE',\n  payload\n})\n\nexport const removeImage = payload => ({\n  type: 'DELETE_IMAGE',\n  payload\n})\n\nexport const toggleModal = payload => ({\n  type: 'TOGGLE_IMAGE_MODAL',\n  payload\n})\n\nexport const getImages = () => {\n  return dispatch => {\n    dispatch(genericImage({\n      loading: true,\n      pageError: false,\n      activeIndex: 0,\n    }))\n    request('get', `image/fetch`)\n      .then(response => {\n        dispatch(genericImage({\n          loading: false,\n          images: response.data,\n          pageError: false,\n        }))\n      }).catch(error => {\n        dispatch(genericImage({\n          loading: false,\n          pageError: true,\n        }))\n      })\n  }\n}\n\nexport const runImageToContainer = (image) => {\n  return dispatch => {\n    dispatch(runImage({\n      imageId: image.ID,\n      data: { stateToggling: true },\n    }))\n    request('get', `image/command?image=${image.ID}&command=${'run'}`)\n      .then(res => {\n        dispatch(runImage({\n          imageId: image.ID,\n          data: { stateToggling: false },\n        }))\n        toaster.success(`Image ${image.ID} has been started running.`,{ duration: 5 })\n      })\n      .catch( ex => {\n        dispatch(runImage({\n          imageId: image.ID,\n          data: { stateToggling: false },\n        }))\n        toaster.warning(`There is problem running image ${image.ID}`,{duration: 5})\n      })\n  }\n}\n\n\nexport const deleteImage = (image, command) => (dispatch, getState)=>{\n    request('get', `image/command?image=${image.ID}&command=${command}`)\n      .then(res => {\n        dispatch(removeImage({\n          imageId: image.ID,\n          showModal: !getState().image.showModal,\n          selectedImage: {}\n        }))\n        toaster.success(\n          `Image ${image.ID} is no more!!!.`,\n          {\n            duration: 5\n          }\n        )\n      })\n      .catch(ex=>{\n        dispatch(removeImage({\n          showModal: !getState().image.showModal,\n          selectedImage: {}\n        }))\n        toaster.danger(\n          `Image ${image.ID} can not be deleted! May be used by some containers.`,\n          {\n            duration: 5\n          },\n        )\n      })\n}\n\nexport const toggleImageDeleteModal = (image) => (dispatch, getState)=>{\n  dispatch(toggleModal({\n    showModal: !getState().image.showModal,\n    selectedImage: image ? image : {}\n  }))\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/modal.css'\nimport { Pane, Button, Heading, Icon } from 'evergreen-ui'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { deleteContainer } from '../../store/actions/container.action'\nimport { deleteImage } from '../../store/actions/image.action'\n\nconst modalRoot = document.getElementById('modal-root')\n\n\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n        this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    componentDidMount() {\n        modalRoot.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        modalRoot.removeChild(this.el);\n    }\n\n    handleDelete(){\n       if(this.props.container){\n         this.props.deleteContainer(this.props.container, 'rm')\n       } else {\n          console.log('else')\n         this.props.deleteImage(this.props.image, 'rm')\n       }\n    }\n\n    render() {\n      const { container, image } = this.props\n        return ReactDOM.createPortal(\n            <div className=\"modal\" id=\"deleteModal\">\n               <Pane \n                  display=\"flex\" \n                  flexDirection=\"column\" \n                  flexGrow={1}\n                  padding={12}\n                  borderRadius={6}\n                  border=\"default\"\n                  className=\"modal-pane\">\n                     <Pane display=\"flex\">\n                        <Pane flex={1} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                           <Heading size={400}>{`Are you sure to delete this ${container ? 'container' : 'image'}?`}</Heading>\n                        </Pane>\n                        <Pane>\n                           <Icon icon='cross' className='modal-close'\n                           onClick={this.props.toggleModal}/>\n                        </Pane>\n                     </Pane>\n                     <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                        <Heading size={600}>{container ? container.Name : image.ID}</Heading>\n                     </Pane>\n                     <Pane display=\"flex\" marginTop={10} justifyContent=\"center\" alignItems=\"center\">\n                        <Pane>\n                           <Button marginRight={10} height={22} onClick={this.props.toggleModal}>Cancel</Button>\n                           <Button  height={22} iconBefore=\"trash\" onClick={ this.handleDelete }>Delete</Button>\n                        </Pane>\n                     </Pane>\n               </Pane>\n            </div>,\n            this.el,\n        );\n    }\n}\n \nconst mapDispatchToProps = dispatch => bindActionCreators(\n   {\n      deleteContainer,\n      deleteImage\n   },\n   dispatch\n )\n\nexport default connect(null, mapDispatchToProps)(Modal)","import React from 'react'\n\nimport SecondaryNavBar from '../components/SecondaryNavBar'\nimport ContainerLists from '../components/container/lists'\nimport GroupsList from '../components/groups/GroupsList'\n\nimport {containerStatsProcess} from '../store/actions/stats.action'\n\nimport {store} from '../store'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { toggleDeleteModal, resetLogSideSheet } from '../store/actions/container.action'\nimport LogSideSheet from '../components/LogSideSheet'\nimport Modal from '../components/container/deleteModal'\n\nclass ContainerPage extends React.PureComponent {\n\n  componentDidMount () {\n    store.dispatch(containerStatsProcess())\n  }\n\n  render () {\n    const { showGroupsPage,showModal, selectedContainer, toggleDeleteModal, \n      resetLogSideSheet, isShowingSideSheet, logData } = this.props\n    return <>\n      <SecondaryNavBar />\n      <LogSideSheet resetLogSideSheet={resetLogSideSheet} isShowingSideSheet={isShowingSideSheet} logData={logData} />\n      { showModal && <Modal container={selectedContainer} toggleModal={toggleDeleteModal} />} \n      <div className=\"subnavaware-view\">\n        {\n          showGroupsPage\n            ? <GroupsList />\n            : <ContainerLists />\n        }\n      </div>\n    </>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    showGroupsPage: state.groups.showGroupsPage,\n    showModal: state.container.showModal,\n    selectedContainer: state.container.selectedContainer,\n    isShowingSideSheet: state.container.isShowingSideSheet,\n    logData: state.container.logData\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    toggleDeleteModal,\n    resetLogSideSheet\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( ContainerPage )","import React from 'react'\nimport { Pane, Button, Heading, Badge, Spinner } from 'evergreen-ui'\nimport '../../components/container/style/card.css'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { genericImage, runImageToContainer, toggleImageDeleteModal } from '../../store/actions/image.action'\n\n\nclass ImageCard extends React.PureComponent {\n\n  render () {\n    const { image, activeIndex, genericImage, index, toggleImageDeleteModal, runImageToContainer } = this.props\n    const active = activeIndex == index\n   return <Pane \n            display=\"flex\" \n            flexDirection=\"column\" \n            flexGrow={1}\n            padding={12}\n            borderRadius={6}\n            border=\"default\"\n            className={active ? \"element-card card-active\" : \"element-card\"}\n            onMouseEnter={() => genericImage({\n            activeIndex: index\n            })}>\n            <Pane display=\"flex\">\n               <Pane display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                  <Heading size={400}>{`${image.Repository != '<none>'? image.Repository : 'No Repository'}: ${ image.Tag != '<none>' ? image.Tag : 'No Tag'}`}</Heading>\n               </Pane>\n               <Badge backgroundColor=\"#e7e9ef\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>{image.ID}</Badge>\n               <Badge backgroundColor=\"#d4eee3\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>{image.Size}</Badge>\n               <Badge backgroundColor=\"#deebf7\" fontWeight=\"bold\" borderRadius={16} paddingLeft={10} fontSize={11} paddingRight={10} marginLeft={10} marginTop={3}>{image.CreatedSince}</Badge>\n            </Pane>\n            { active && \n               <Pane display=\"flex\" marginTop={12}>\n                  <Button marginRight={5} \n                        height={22} \n                        iconBefore=\"application\"\n                        onClick={()=>{\n                          runImageToContainer(image)\n                        }}\n                        isLoading={image.stateToggling}\n                       >Run</Button>\n                  <Button marginRight={5} \n                        height={22} \n                        iconBefore=\"trash\" \n                        onClick={()=>{\n                          toggleImageDeleteModal(image)\n                        }}\n                        >\n                        Delete\n                  </Button>\n               </Pane>\n            }\n         </Pane>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeIndex: state.image.activeIndex,\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    genericImage,\n    toggleImageDeleteModal,\n    runImageToContainer\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( ImageCard )","import React from 'react'\nimport { Pane, Button, Heading, Badge, Spinner } from 'evergreen-ui'\nimport '../components/container/style/card.css'\nconst Loader = (props) => {\n    return (\n      <Pane \n      display=\"flex\" \n      flexDirection=\"column\" \n      justifyContent=\"center\" \n      alignItems=\"center\"\n      marginTop={20}>\n         <Heading>{props.spinner ? `Loading images. Please wait....` : `No image on this machine`}</Heading>\n         {props.spinner && <Spinner marginX=\"auto\" marginY={120}/>}\n      </Pane>\n    )\n};\n\nexport default Loader","import React from 'react'\nimport { Pane } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getImages, toggleImageDeleteModal } from '../../store/actions/image.action'\n\nimport ImageCard from './imageCard'\nimport Modal from '../container/deleteModal'\nimport Loader from '../Loader'\n\nclass ImageList extends React.PureComponent {\n\n  componentDidMount () {\n    this.props.getImages()\n  }\n\n  render () {\n    const { images, showModal, selectedImage, toggleImageDeleteModal, loading } = this.props\n    if(loading){\n      return <Loader spinner={true}/>\n    } else if(images.length == 0){\n      return <Loader/>\n    }\n    return <Pane \n      display=\"flex\" \n      flexDirection=\"column\" \n      justifyContent=\"center\" \n      alignItems=\"center\"\n      marginTop={20}>\n      \n      { showModal && <Modal image={selectedImage} toggleModal={toggleImageDeleteModal} />} \n        {\n          images.map((image, index) => \n            <ImageCard \n              key={index} \n              index={index} \n              image={image} \n            />\n          )\n        }\n    </Pane>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    images: state.image.images,\n    showModal: state.image.showModal,\n    selectedImage: state.image.selectedImage,\n    loading: state.image.loading\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    getImages,\n    toggleImageDeleteModal\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( ImageList )","import React from 'react'\n\nimport SecondaryNavBar from '../components/SecondaryNavBar'\nimport ImageLists from '../components/image/imageLists'\n\nclass ImagePage extends React.PureComponent {\n\n  render () {\n    return <>\n      <ImageLists />\n    </>\n  }\n\n}\n\nexport default ImagePage","import { request } from '../../utilities/request'\nimport { toaster } from 'evergreen-ui'\n\nexport const setCleanUpSegment = payload => ({\n  type: 'SELECTED_SEGMENT',\n  payload\n})\n\nexport const executePrune = payload => ({\n  type: 'EXECUTE_PRUNE',\n  payload\n})\n\n\nexport const setSelectedCleanUpSegment = (value) => (dispatch, getState)=>{\n  dispatch(setCleanUpSegment({\n    segmentValue: value\n  }))\n}\n\n\nexport const pruneCommand = (type) => (dispatch, getState)=>{\n  dispatch(executePrune({\n    apiCallStarted: true,\n    responseData: {},\n    isShowingSideSheet:false,\n  }))\n  request('get', `cleanup/command?type=${type}`)\n    .then(res => {\n      dispatch(executePrune({\n        isShowingSideSheet: res.data ? true : false,\n        responseData: res.data,\n        apiCallStarted: false\n      }))\n      if(!res.data){\n        toaster.success(`${type} prune success`, {duration: 5})\n      }\n    }) \n    .catch(ex=>{\n      dispatch(executePrune({\n        responseData: {},\n        isShowingSideSheet:false,\n        apiCallStarted:false\n      }))\n    }) \n}\n\nexport const resetLogSideSheet = () => (dispatch, getState)=>{\n  dispatch(executePrune({\n    isShowingSideSheet: !getState().cleanup.isShowingSideSheet,\n    apiCallStarted: getState().cleanup.apiCallStarted\n  }))\n}","import React from 'react'\nimport { Pane, Spinner, SegmentedControl, Button } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { setSelectedCleanUpSegment } from '../../store/actions/cleanUp.action'\n\n\nclass CleanUpNavBar extends React.PureComponent {\n\n   render() {\n      const {segmentOptions, selectedSegment, setSelectedCleanUpSegment} = this.props;\n      \n      return <Pane \n        backgroundColor=\"#f1f1f1\" \n        display=\"flex\" \n        justifyContent=\"center\"\n        padding={10}>\n        <SegmentedControl\n          width={600}\n          height={26}\n          options={segmentOptions}\n          value={selectedSegment.value}\n          onChange={value => {\n            setSelectedCleanUpSegment(value)\n          }}\n        />\n      </Pane>\n    }\n  }\n  \n  const mapStateToProps = state => {\n    return {\n      segmentOptions: state.cleanup.segmentOptions,\n      selectedSegment: state.cleanup.selectedSegment\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => bindActionCreators(\n    {\n      setSelectedCleanUpSegment\n    },\n    dispatch\n  )\n\nexport default connect(mapStateToProps, mapDispatchToProps)( CleanUpNavBar )","import React from 'react'\nimport { Pane, Button, Heading, Paragraph } from 'evergreen-ui'\n\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport '../container/style/card.css'\nimport { pruneCommand } from '../../store/actions/cleanUp.action'\n\nclass CleanUpInfo extends React.PureComponent {\n\n  render () {\n\n     const { selectedSegment, pruneCommand, apiCallStarted } = this.props\n     return <Pane \n               display=\"flex\" \n               flexDirection=\"column\" \n               justifyContent=\"center\" \n               alignItems=\"center\"\n               marginTop={20}>\n               <Pane \n                  display=\"flex\" \n                  flexDirection=\"column\" \n                  flexGrow={1}\n                  padding={12}\n                  borderRadius={6}\n                  border=\"default\"\n                  className={\"element-card card-active\" }\n                  >\n                  <Pane display=\"flex\">\n                     <Pane display=\"flex\" >\n                        <Heading>{`Prune Docker ${selectedSegment.value}s`}</Heading>\n                     </Pane>\n                  </Pane>\n                  <Pane display=\"flex\" marginTop={12}>\n                     <Paragraph>{selectedSegment.message} </Paragraph>\n                  </Pane>                 \n                  <Pane display=\"flex\" marginTop={12} >              \n                     <Button marginRight={5} \n                        height={22} \n                        iconBefore=\"trash\" \n                        intent=\"danger\"\n                        isLoading={apiCallStarted}\n                        onClick={()=>{\n                           pruneCommand(selectedSegment.value)\n                        }}\n                        >\n                        {`Proceed to Prune ${selectedSegment.value}`}\n                     </Button>\n                  </Pane>                    \n               </Pane>\n         </Pane>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n      selectedSegment: state.cleanup.selectedSegment,\n      apiCallStarted: state.cleanup.apiCallStarted\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n   pruneCommand\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( CleanUpInfo )","import React from 'react'\n\nimport { bindActionCreators } from 'redux'\n\nimport CleanUpNavBar from '../components/cleanup/cleanupSubNav'\nimport CleanUpInfo from '../components/cleanup/cleanUpInfo'\nimport { resetLogSideSheet } from '../store/actions/cleanUp.action'\nimport LogSideSheet from '../components/LogSideSheet'\n\nimport { connect } from 'react-redux'\n\nclass CleanUpPage extends React.PureComponent {\n  render () {\n    const { resetLogSideSheet, isShowingSideSheet, logData } = this.props\n    return <>\n      <LogSideSheet resetLogSideSheet={resetLogSideSheet} isShowingSideSheet={isShowingSideSheet} logData={logData} />\n      <CleanUpNavBar />\n      <CleanUpInfo/>\n    </>\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isShowingSideSheet: state.cleanup.isShowingSideSheet,\n    logData: state.cleanup.responseData\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n  {\n    resetLogSideSheet\n  },\n  dispatch\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)( CleanUpPage )","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Navbar from './components/NavBar'\n\nimport ContainerPage from './pages/container.page'\nimport ImagePage from './pages/image.page'\nimport CleanupPage from './pages/cleanup.page'\n\nconst Routes = () => {\n    return (\n        <React.Fragment>\n            <BrowserRouter>\n               <Navbar/>\n                <Switch>\n                    <Route path=\"/\" exact component={ContainerPage}/>\n                    <Route path=\"/containers\" exact component={ContainerPage}/>\n                    <Route path=\"/images\" component={ImagePage}/>\n                    <Route path=\"/cleanup\" component={CleanupPage}/>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    )\n}\n\nexport default Routes","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport { Provider } from 'react-redux'\nimport Routes from './routes'\nimport { store } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Routes />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}